
// Population passes half a million
mixin subheadVal(i)
    if (cha(s, place, i)<0)
        | Population drops
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<100000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>100000))
        | Population passes #[+value(100000)]
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<200000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>200000))
        | Population passes #[+value(200000)]
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<50000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>50000))
        | Population passes #[+value(50000)]
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<250000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>250000))
        | Population passes quarter of a million
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<500000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>500000))
        | Population passes half a million
    else if ((data[s[i][0]][s[i][1]]['2001'][s[i][3]]<1000000)&(data[s[i][0]][s[i][1]]['2011'][s[i][3]]>1000000))
        | Population passes a million
    else if ([250000, 500000, 1000000].includes(Number.parseFloat(Number.parseFloat(cur(s, place, i)).toPrecision(2))))
        | #[+value(cap(topics[s[i][0]].general))]
        if (get_word(data[s[i][0]][s[i][1]]['2011'][s[i][3]], "num")[0]=="just under")
            | nears 
        else
            | passes
        | #[+value(get_word(data[s[i][0]][s[i][1]]['2011'][s[i][3]], "num")[1])]
    else
        | Population
        if ((cur(s, place, i)<(Number.parseFloat(Number.parseFloat(cur(s, place, i)).toPrecision(2)))))
            | nears
        else if (cur(s, place, i)>(Number.parseFloat(Number.parseFloat(cur(s, place, i))).toPrecision(2)))
            | passes
        else 
            | reaches
        |  #[+value(Number.parseFloat(Number.parseFloat(cur(s, place, i)).toPrecision(2)))]


// A younger Manchester
mixin subheadAge(i)
    | #[+value(ud(cha(s, place, i), place.name + ' grows older', 'A younger ' + place.name))]

mixin tenYears
  synz {mode:'sequence'}
    syn
      | in the decade to 2021
    syn
      | between the last two censuses
    syn
      | in the 10 years leading up to 2021
    syn
      | in the decade leading up to the last census
    syn
      | in the 10 years leading up to the last census

// Between the last two censuses, the average age in Manchester fell by two years, from 34 to 32 years of age.
mixin sent1Age(i)
    p
        if (i==1)
            | Census 2021 data also shows a shift in #[+value(topics[s[i][0]].synonym)].
        else
            | #[+tenYears],
        p
            | the #[+value(topics[s[i][0]].general)] 
            | in #[+value(place.name)] 
            | #[+value(ud(cha(s, place, i), 'rose by', 'fell by'))]
            | #[+value(Math.abs(cha(s, place, i)), {'TEXTUAL':true })] 
            | #[+value(Math.abs(cha(s, place, i))==1?'year':'years')],
            | from #[+value(data[s[i][0]][s[i][1]][2001][s[i][3]])]
            | to #[+value(data[s[i][0]][s[i][1]][2011][s[i][3]])] years of age.

// Manchester's average age is the lowest in the North West and remains considerably lower than the average age across England (38 years of age).
mixin sent2Age(i)        
    - let lra = data[s[i][0]][s[i][1]+"_rank_local"][2011][s[i][3]]
    - let agediff = data[s[i][0]][s[i][1]][2011][s[i][3]]-cou.data.agemed.value[2011].all
    - let agediff01 = data[s[i][0]][s[i][1]][2001][s[i][3]]-cou.data.agemed.value[2001].all
    if (country=="England")
        | This #[+value(place.classification)] has 
        if (Math.abs(lra)<5)
            | the #[+value(ud(lra, ord(lra) + "highest", ord(lra) + "lowest"))]
            | average age in #[+value(parent)] and 
        else
            | a #[+value(adv(cur(s, place, i), cur(s, rgn, i)))] 
            | #[+value(ud(cur(s, place, i)-cur(s, rgn, i), 'higher', 'lower'))]
            | average age than #[+value(parent)] and
        if (data[s[i][0]][s[i][1]][2011][s[i][3]]==eng.data.agemed.value[2011].all)
            | has a similar age to the average local authority across England (#[+value(eng.data.agemed.value[2011].all)] years of age).
        else
            | #[+value((Math.sign(agediff) == Math.sign(agediff01)?'remains':'has become'))] 
            | #[+value(Math.abs(agediff)>4?'considerably': Math.abs(agediff)>2?'somewhat':'slightly')] 
            | #[+value(ud(agediff, 'older', 'younger'))] 
            | than the average local authority across England (#[+value(eng.data.agemed.value[2011].all)] years of age).
    else
        | This #[+value(place.classification)] has
        | a #[+value(adv(cur(s, place, i), cur(s, simi, i)))] 
        | #[+value(ud(cur(s, place, i)-cur(s, simi, i), 'higher', 'lower'))]
        | average age than #[+similarname] (#[+value(cur(s, simi, i))] years of age) and
        if (Math.abs(lra)<5)
            | the #[+value(ud(lra, ord(lra) + "highest", ord(lra) + "lowest"))]
            | average age in #[+value(parent)].
        else if (cur(s, place, i)==cur(s, rgn, i))
            | has a similar age to the average local authority across Wales (#[+value(rgn.data.agemed.value[2011].all)] years of age).
        else
            | #[+value((Math.sign(agediff) == Math.sign(agediff01)?'remains':'has become'))] 
            | #[+value(Math.abs(agediff)>4?'considerably': Math.abs(agediff)>2?'somewhat':'slightly')] 
            | #[+value(ud(agediff, 'older', 'younger'))] 
            | than the average local authority across Wales (#[+value(rgn.data.agemed.value[2011].all)] years of age).


// The drop in age was largely driven by an increase of nearly 50,000 people between the ages of 20 and 29 years, while the population over the age of 70 years decreased by almost two thousand.
mixin sent3Age(i)
    | The #[+value(ud(agediff, 'rise', 'drop'))] in age was largely driven by an increase of 
    | #[+value(figs(data.age10yr.absChange['pos'][0][1])[0])]  
    | #[+value(figs(data.age10yr.absChange['pos'][0][1])[1])]  
    | #[+value(ageBandLU[data.age10yr.absChange['pos'][0][0]][0])]
    if (data.age10yr.absChange['neg'][0])
        | , while the population #[+value(ageBandLU[data.age10yr.absChange['neg'][0][0]][1])] decreased by 
        | #[+value(figs(data.age10yr.absChange['neg'][0][1])[0])]  
        | #[+value(Math.abs(figs(data.age10yr.absChange['neg'][0][1])[1]))]  
    | .

// In the decade to 2021, the population of Manchester rose by over 28% from 391,221 to 503,127, giving it the largest headcount of any local authority area in the North West of England.
mixin sent1pop(i)
    | #[+tenYears],
    | the #[+value(topics[s[0][0]].general)]
    | of #[+value(place.name)]
    | #[+value(ud(cha(s, place, i), 'rose', 'fell by'))]
    | #[+value(Math.abs((data[s[i][0]][s[i][1]]['change'][s[i][3]])/100), {'FORMAT': '0.0%'})] 
    | from #[+value(figs(data[s[i][0]][s[i][1]][2001][s[i][3]], 3)[0])]
    | #[+value(figs(data[s[i][0]][s[i][1]][2001][s[i][3]], 3)[1])]
    | to #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]], 3)[0])]
    | #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]], 3)[1])].

mixin geog 
    if (country=="Wales")
        | Wales
    else
        | the #[+value((parent=="London")?"city":"region")]

// The addition of over 100,000 people means Manchester's population is also the fastest-growing in the North West and the second-fastest-growing across England. Only Tower Hamlets in London, with an increase of almost 30%, has a faster-growing population.
mixin sent2pop(i)
    - var lra = data[s[i][0]][s[i][1]+'_rank_local']['change'][s[i][3]]
    | The 
    | #[+value(ud(cha(s, place, i), "addition", "loss"))]
    | of about
    | #[+value(Math.abs(figs(data[s[i][0]][s[i][1]][2011][s[i][3]]-data[s[i][0]][s[i][1]][2001][s[i][3]], "num")[1]))]
    | people means this area's population is  
    if (country=="England")
        if ((lra<5) & (sign(lra, cha(s, place, i))))
            | the #[+value(ud(lra, (ord(Math.abs(lra))+"fastest-growing"), (ord(Math.abs(lra))+"most rapidly declining")))]
            | in #[+geog]
            | #[+value((place.stories[i].value<(eng.data[s[i][0]][s[i][1]]['change'][s[i][3]]-1))?"but":"and")]
        if (Math.abs(data[s[i][0]][s[i][1]+'_rank']['change'][s[i][3]])<20)
            if (Math.abs(data[s[i][0]][s[i][1]+'_rank']['change'][s[i][3]])>1)
                | the #[+value(Math.abs(data[s[i][0]][s[i][1]+'_rank']['change'][s[i][3]]), {'ORDINAL_TEXTUAL':true})]
            | #[+value(ud(cha(s, place, i), 'fastest-growing', 'most rapidly declining'))]
            | across 
            | #[+value(country)].
        else
            if (place.stories[i].value<(eng.data[s[i][0]][s[i][1]]['change'][s[i][3]]-1))
                | increasing at a slower rate than the total population of 
            else if (place.stories[i].value>(eng.data[s[i][0]][s[i][1]]['change'][s[i][3]]+1))
                | increasing faster than the rate of population growth across 
            else
                | increasing at a similar rate to the overall population of
            | #[+value(country)] (#[+value((cha(s, place, i)==cha(s, eng, i))?'also':'')]
            | up #[+value((eng.data[s[i][0]][s[i][1]]['change'][s[i][3]])/100, {'FORMAT': '0.0%'} )] since the 2011 census).
    else
        if ((lra<5) & (sign(lra, cha(s, place, i))))
            | the #[+value(ud(lra, (ord(Math.abs(lra))+"fastest-growing"), (ord(Math.abs(lra))+"most rapidly declining")))]
            | in #[+geog]
            | , while #[+value(place.name)] #[+value(data.population.value_rank[2011].all==data.population.value_rank[2001].all?"remains":"becomes")] the 
            | #[+value(udord(data.population.value_rank[2011].all, "most", "least"))] populous
            | local authority in the country. 
        else
            if (place.stories[i].value<(rgn.data[s[i][0]][s[i][1]]['change'][s[i][3]]-1))
                | increasing at a slower rate than the total population of 
            else if (place.stories[i].value>(rgn.data[s[i][0]][s[i][1]]['change'][s[i][3]]+1))
                | increasing faster than the rate of population growth across 
            else
                | increasing at a similar rate to the overall population of
            | Wales (
            | #[+value((cha(s, place, i)==cha(s, rgn, i))?'also':'')]
            |up #[+value((rgn.data[s[i][0]][s[i][1]]['change'][s[i][3]])/100, {'FORMAT': '0.0%'} )] since the 2011 census).


// For each football pitch-sized piece of land (about 7,140 square metres), Manchester is now home to, on average, about 31 people, compared to 24 in 2011.
mixin density 
    | #[+value(place.name)] is now home to, on average, 
    | #[+value(Number.parseFloat(Number.parseFloat(0.714*data.density.value[2011].all).toPrecision(2)))]
    | people per football pitch-sized piece of land (about #[+value(7140)] square metres), compared to 
    | #[+value(Number.parseFloat(Number.parseFloat(0.714*data.density.value[2001].all).toPrecision(2)))] in 2011.
    if (Math.abs(data.density.value_rank[2011].all)==1)
        | This makes it #[+value(country)]'s #[+value(udord(data.density.value_rank[2011].all, "most-densely-populated", "least-densely-populated"))] #[+value(place.gss.short)].
    else if (Math.abs(data.density.value_rank_local[2011].all)==1)
        | This makes it #[+value(parent)]'s #[+value(udord(data.density.value_rank_local[2011].all, "most-densely-populated", "least-densely-populated"))] #[+value(place.gss.short)].
    else if (Math.abs(data.density.value_rank[2011].all)<6)
        | This makes it #[+value(country)]'s #[+value(udord(data.density.value_rank[2011].all, "most-densely-populated", "least-densely-populated"))] #[+value(place.gss.short)].
    else if (Math.abs(data.density.value_rank_local[2011].all)<6)
        | This makes it #[+value(parent)]'s #[+value(udord(data.density.value_rank_local[2011].all, "most-densely-populated", "least-densely-populated"))] #[+value(place.gss.short)].

// Between 2011 and 2021, Manchester overtook Wiltshire and Liverpool to become England's eighth-most populated local authority.
mixin sent4Pop(i)
    | Between 2011 and 2021, this #[+value(place.gss.short)] overtook 
    if (data['density'][s[i][1]+'_rank']['overtake'][s[i][3]].length<4)
        eachz item in data['density'][s[i][1]+'_rank']['overtake'][s[i][3]] with { separator: ',', last_separator: 'and' }
            | #{item}
    else if (data['density'][s[i][1]+'_rank']['overtake'][s[i][3]].length>3)
        | #[+value(data['density'][s[i][1]+'_rank']['overtake'][s[i][3]].length)] areas, 
        | including #[+value(data['density'][s[i][1]+'_rank']['overtake'][s[i][3]][0])] 
        | and #[+value(data['density'][s[i][1]+'_rank']['overtake'][s[i][3]][1])]
    | to become England's #[+value(Math.abs(data.density.value_rank[2011].all), {'ORDINAL_TEXTUAL':true})]
    | most densely populated local authority.


mixin overtake(i, loc)
    | During this period, the #[+value(place.classification)] 
    - var ove = data[s[i][0]][s[i][1]+"_rank"+loc]['overtake'][s[i][3]]
    - var ra = data[s[i][0]][s[i][1]+"_rank"+loc][2011][s[i][3]]
    if (Math.abs(ra)<11)
        | #[+value(ud(ra, 'overtook', 'fell below'))] 
        if (ove.length<4)
            eachz item in ove with { separator: ',', last_separator: 'and' }
                | #{item}
        else if (ove.length>3)
            | #[+value(nuword(ove.length))] 
            | areas, 
            | including #[+value(ove[0])] 
            | and #[+value(ove[1])]
        
        | to become the #[+value((loc == "_local") ? parentNT : (country=="Wales")?"Welsh":"English")] local authority with the
        | #[+value(ud(ra, (ord(Math.abs(ra))+"highest"), (ord(Math.abs(ra))+"lowest")))]
        | percentage of #[+value(topics[s[i][0]][s[i][3]].adj_noun_s)].
    else
        | went from having the
        | #[+value(ord(Math.abs(data[s[i][0]][s[i][1]+"_rank"+loc][2001][s[i][3]]))+ud(data[s[i][0]][s[i][1]+"_rank"+loc][2001][s[i][3]],"highest", "lowest"))]
        | to the #[+value(ud(ra, (ord(Math.abs(ra))+"highest"), (ord(Math.abs(ra))+"lowest")))] percentage of #[+value(topics[s[i][0]][s[i][3]].adj_noun_s)] out of 
        | #[+value((country=="England")?"309 English":"22 Welsh")] local authoirities.

//- mixin percOfRes(place)
//-     synz {mode:'sequence'}
//-         syn
//-             | the percentage of #[+value(place.name)] residents
//-         syn
//-             | the percentage of people living in #[+value(place.name)] 

// In the 10 years leading up to the last census, the percentage of Manchester residents describing their health as good increased from just over 66% to about 80%.
mixin sent1Perc(i)
    if (i==1)
        p Census 2021 data also shows a shift in #[+value(topics[s[i][0]].synonym)].
    p the percentage of
        | #[+value(topic(i).clausal_modifier)] 
        if (cha(s, place, i)<0)
            | decreased
        else
            | increased 
        | from 
        | #[+value((figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[1])/100, {'FORMAT': '0.0%'})]
        if (i==1)
            | in 2011
        | to 
        | #[+value((figs(cur(s, place, i))[1])/100, {'FORMAT': '0.0%'})]
        if (i!=1)
            | #[+tenYears]
        | .

// About one in eight (13%) described their health as fair, compared with just over 23% in 2011. The percentage reporting bad health decreased from just under 13% to just over 7%.
mixin sent2Perc(i, chain0_01, chain0_11, chain1_01, chain1_11)
    | In 2021,
    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])/100, 'frac')[0])]
    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])/100, 'frac')[1])]
    | (#[+value(chain0_11/100, {'FORMAT': '0.0%'})])  
    | #[+value(topic(i, chains[s[i][3]][0]).verb_past)],
    | compared with
    | #[+value(chain0_01/100, {'FORMAT': '0.0%'})]
    | in 2011. 
    if (chains[s[i][3]].length>1)
        | The percentage of
        | #[+value(topic(i, chains[s[i][3]][1]).clausal_modifier)] 
        | #[+value(ud(chain1_11-chain1_01, 'increased', 'decreased'))]
        | from 
        | #[+value(chain1_01/100, {'FORMAT': '0.0%'})]
        | to 
        | #[+value(chain1_11/100, {'FORMAT': '0.0%'})]
        | .

mixin inRegion
    synz {mode:'sequence'}
        syn 
            | in any other local authority district across
        syn
            | anywhere else in

// The proportion of healthy residents in Manchester is growing at the third fastest rate of all local authority disricts across England.
// The population of Manchester is becoming more healthy at the third fastest of all local authority districts across England.
mixin topRank(i)
    | The proportion of #[+value(topic(i).adj_noun)] is 
    | #[+value(ud(cha(s, place, i, "r"), 'growing', 'falling'))]
    if (Math.abs(cha(s, place, i, "r"))==1)
        | faster here than #[+inRegion] #[+value(country)]
    else 
        | at the third fastest rate of all local authority districts across #[+value(country)]
    if ((Math.abs(otherRank(s, place, i, 'cou'))==1)&(!hasSaid('OtherChange')))
        | , while the percentage of 
        | #[+value(topic(i, otherEst(s, place, i, cha(s, place, i, "r"), 'change')).adj_noun)] is 
        | #[+value(ud(otherRank(s, place, i, 'cou'), 'increasing', 'decreasing'))]
        | faster than anywhere else in the #[+value(city)].
        if ((i!=hiRank.rankIn)&(s[i][0]!='health'))
            p #[+nowHasReg(i)] 
        recordSaid('OtherChange')
    else
        | .
        if (Math.abs(cur(s, place, i, "r"))<11)
            | #[+nowHasCou(i)]
        else
            | #[+considImprov(i)]

// The proportion of healthy residents is increasing faster here than in any other local authority district across the region.
mixin topRankLoc(i)
    | The proportion of #[+value(topic(i).adj_noun)] is 
    if (cha(s, place, i, "rl")<0)
        | decreasing
    else
        | increasing
    | faster here than #[+inRegion] #[+value(parent)]
    if ((Math.abs(otherRank(s, place, i, "rl"))==1)&(!hasSaid('OtherChange')))
        | , while the percentage of 
        | #[+value(topic(i, otherEst(s, place, i, cha(s, place, i, "rl"), 'change')).adj_noun)] is 
        | #[+value(ud(otherRank(s, place, i, "rl"), 'growing', 'falling'))]
        | faster than anywhere else in the #[+value(city)]
        if ((i!=hiRank.rankIn)&(s[i][0]!='health'))
            p #[+nowHasReg(i)] 
        recordSaid('OtherChange')
    else
        | .
        if (Math.abs(cur(s, place, i, "rl"))<6)
            | As a result, #[+nowHasReg(i)]
            if ((i!=hiRank.rankIn)&(s[i][0]!='health'))
                p #[+nextHighest(i)]
        else
                | #[+considImprov(i)]

// This mixin determines how the rest of the section will be generated
mixin sent3Perc(i)
    if (Math.abs(cha(s, place, i, "r"))<4)
        | #[+topRank(i)]
    else if (Math.abs(cha(s, place, i, "rl"))==1)
        | #[+topRankLoc(i)] 
    else
        | The proportion of  #[+value(topic(i).adj_noun)] has been
        | #[+value(ud(cha(s, place, i), 'growing', 'falling'))]
        if (country=="England")
            if ((cha(s, place, i)>cha(s, near, i)-1)&(cha(s, place, i)<cha(s, near, i)+1))
                | at a similar rate to the figure
            else
                | #[+value(uds((Math.abs(cha(s, place, i)) - Math.abs(cha(s, rgn, i))), 'faster here than', 'at a slower rate here than', 'here at a similar rate to'))]
            | across #[+value(parent)]
            | (from #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] in 2011 to 
            | #[+value((cur(s, rgn, i))/100, {'FORMAT': '0.0%'})]) 
            if ((sign(Math.abs(cha(s, place, i))-Math.abs(cha(s, rgn, i))), sign(Math.abs(cha(s, place, i))-Math.abs(cha(s, eng, i)))))
                | and across #[+value(country)] 
                | (from #[+value((eng.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
                | #[+value((eng.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]).
            else
                | . Across #[+value(country)] the proportion #[+value(ud(cha(s, rgn, i), 'rose', 'fell'))]
                | from #[+value((eng.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
                | #[+value((eng.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})].
        else
            if ((cha(s, place, i)>cha(s, near, i)-1)&(cha(s, place, i)<cha(s, near, i)+1))
                | at a similar rate to 
            else
                | #[+value(ud(Math.abs(cha(s, place, i))-Math.abs(cha(s, near, i)), 'faster', 'at a slower rate'))]
                | here than in 
            | #[+nearbyname]
            | (from #[+value((near.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] in 2011 to 
            | #[+value((near.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})])
            if ((sign(Math.abs(cha(s, place, i))-Math.abs(cha(s, near, i))), sign(Math.abs(cha(s, place, i))-Math.abs(cha(s, rgn, i)))))
                | and across #[+value(parent)]
                | (from #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
                | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]) .
            else 
                | . Across Wales the proportion #[+value(ud(cha(s, rgn, i), 'rose', 'fell'))]
                | from #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
                | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})].

// Blackburn with Darwen has the region's next lowest proportion of residents from a White ethnic group (69.2%), while 90.1% in nearby Salford are from a White ethnic group.
mixin nextHighest(i)
    if (cur(s, place, i, "rl")<0)
        | #[+value(data[s[i][0]][s[i][1]+"_rank_local"]['above_below'][s[i][3]].above.name)] 
        | has the region's next lowest proportion of 
        | #[+value(topic(i).adj_noun)]
        | (#[+value((data[s[i][0]][s[i][1]+"_rank_local"]['above_below'][s[i][3]].above.value)/100, {'FORMAT': '0.0%'})]), 
    else
        | #[+value(data[s[i][0]][s[i][1]+"_rank_local"]['above_below'][s[i][3]].below.name)] 
        | has the region's next highest proportion of 
        | #[+value(topic(i).adj_noun)]
        | (#[+value((data[s[i][0]][s[i][1]+"_rank_local"]['above_below'][s[i][3]].below.value)/100, {'FORMAT': '0.0%'})]),
    | while the proportion is
    | #[+value((near.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
    | in #[+nearbyname].

// As a result, this area now has the country's highest proportion of private renters and the lowest proportion of homeowners.
mixin nowHasCou(i)
    | As a result, this area now has the country's 
    if (Math.abs(data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]])!=1)
        | #[+value(data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]], {'ORDINAL_TEXTUAL':true})]
    if (data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]]<0)
        | lowest
    else
        | highest 
    | proportion of 
    | #[+value(topic(i).adj_noun)]
    | and the lowest proportion of homeowners
    | .

// As a result, this area now has the region’s highest proportion of private renters and the lowest proportion of homeowners.
mixin nowHasReg(i)
    | this area now has 
    if (parent=="London")
        | the city
    else
        | the region’s 
    if (Math.abs(data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]])!=1)
        | #[+value(Math.abs(data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]]), {'ORDINAL_TEXTUAL':true})]
    if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]]<0)
        | lowest proportion of #[+value(topic(i).adj_noun)]
        if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][otherEst(s, place, i, 'highest', '2011')]==1)
            | and the 
            | highest proportion of 
            | #[+value(topic(i, otherEst(s, place, i, 'highest', '2011')).adj_noun)]
    else
        | highest proportion of #[+value(topic(i).adj_noun)]
        if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][otherEst(s, place, i, 'lowest', '2011')]==-1)
            | and the 
            | lowest proportion of
            | #[+value(topic(i, otherEst(s, place, i, 'lowest', '2011')).adj_noun)]
    | .

// The considerable improvement has brought health in Manchester close to the national average (about 81% in England described their health as good in 2021).
mixin considImprov(i)
    if (data[s[i][0]][s[i][1]+'_rank_local']['change'][s[i][3]]==1)
        if (data[s[i][0]][s[i][1]][2011][s[i][3]]<(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]-2))
            | But despite the considerable improvement, 
            | #[+value(place.name)] 
            | remains 
            | less healthy than 
        else if (data[s[i][0]][s[i][1]][2011][s[i][3]]>(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]+2))
            | As a result, #[+value(place.name)] 
            | has become more healthy than
        else
            | The considerable improvement has brought health in 
            | #[+value(place.name)] close to 
        | the national average
        | #[+value((figs(eng.data[s[i][0]][s[i][1]][2011][s[i][3]])[1])/100, {'FORMAT': '0.0%'})]
        | in #[+value(country)] described their health as good in 2021).
    else
        if (data[s[i][0]][s[i][1]][2011][s[i][3]]<(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]-2))
            | But despite the considerable improvement, 
            | #[+value(place.name)] 
            | remains 
            | less healthy than 
        else if (data[s[i][0]][s[i][1]][2011][s[i][3]]>(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]+2))
            | As a result, #[+value(place.name)] 
            | has become more healthy than   
        else
            | The considerable improvement has brought health in 
            | #[+value(place.name)] close to 
        | the regional average
        | #[+value((figs(rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])[1])/100, {'FORMAT': '0.0%'})]
        | in #[+value(parent)] described their health as good in 2021).

mixin healthExplain
    | These data are people’s own opinions in describing their overall health. They may be inconsistent with other measures of health, such as NHS records.

//- The rate of self-employment rose in Darlington, but at a slower rate than all other local authorities in the the North East.
mixin butSlower(i, loc)
    p 
        | #[+value(topic(i, s[i][3]).topic)] 
        | #[+value(ud(cha(s, place, i), 'rose', 'fell'))]
        | in #[+value(place.name)], but at
        if (data[s[i][0]][s[i][1]+'_rank'+loc][s[i][2]][s[i][3]]>3)
            - loc = "_local"
        if (data[s[i][0]][s[i][1]+'_rank'+loc][s[i][2]][s[i][3]]>3)
            | the #[+value(ord(data[s[i][0]][s[i][1]+'_rank'+loc][s[i][2]][s[i][3]]))] 
            | slowest rate of any local authority across #[+value(country)]. 
        else
            | a slower rate than all other local authorities
            | #[+value((loc!="_local")? ("across " + country): (parent=="London")? "London boroughs":"local authorities in "+parent)]
            if (Math.abs(data[s[i][0]][s[i][1]+'_rank'+loc][s[i][2]][s[i][3]])!=1)
                | , except #[+value(data[s[i][0]][s[i][1]+'_rank'+loc].top_bottom[s[i][3]][1].name)]
                if (Math.abs(data[s[i][0]][s[i][1]+'_rank'+loc][s[i][2]][s[i][3]])!=2)
                    | and #[+value(data[s[i][0]][s[i][1]+'_rank'+loc].top_bottom[s[i][3]][2].name)] 
        | .


mixin rank1reg(i)
    // In the rare occasion that the bottom rank is a positive change, vice versa
    if (Math.sign(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]]) != Math.sign(cha(s, place, i)))
        | #[+butSlower(i, "_local")]
    else
        | This #[+value(place.gss.short)] saw #[+value(parent)]'s 
        | #[+value(drop(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]], 'largest drop', 'largest rise'))]
        | in the proportion of #[+value(topic(i, s[i][3]).adj_noun)].

mixin rank1nat(i)
    // In the rare occasion that the bottom rank is a positive change, vice versa
    if (Math.sign(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]]) != Math.sign(cha(s, place, i)))
        | #[+butSlower(i, "")]
    else
        | This #[+value(place.gss.short)] saw #[+value(country)]'s 
        | #[+value(drop(data[s[i][0]][s[i][1]+'_rank'][s[i][2]][s[i][3]], 'largest drop', 'largest rise'))]
        | in the proportion of #[+value(topic(i, s[i][3]).adj_noun)].

mixin rank2(i)
    | In 2021,
    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][s[i][3]])/100, 'frac')[0])]
    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][s[i][3]])/100, 'frac')[1])]
    | (#[+value((figs(data[s[i][0]][s[i][1]][2011][s[i][3]])[1])/100, {'FORMAT': '0.0%'})])  
    | #[+value(topic(i, s[i][3]).verb_past)],
    | compared with
    | #[+value((figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[1])/100, {'FORMAT': '0.0%'})]
    | in 2011. 
    | The percentage of
    | #[+value(topic(i, chains[s[i][3]][0]).clausal_modifier)] 
    if (data[s[i][0]][s[i][1]][2001][chains[s[i][3]][0]]>data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])
        | decreased 
    else
        | increased
    | from 
    | #[+value((figs(data[s[i][0]][s[i][1]][2001][chains[s[i][3]][0]])[1])/100, {'FORMAT': '0.0%'})]
    | to 
    | #[+value((figs(data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])[1])/100, {'FORMAT': '0.0%'})]
    | .

mixin regional 
    if (parent=="Wales")
        | Welsh
    else
        | regional

mixin region
    if (parent=="Wales")
        | Wales
    else if (parent=="London")
        | London
    else
        | the region

//- Across the North East, Manchester (from 50% in 2011 to 30% in 2021) saw the next greatest drop in the proportion of people working long hours, while the regional average decreased from 40% to 20%.
mixin acrossRegion(i)
    | Across #[+value(parent)], 
    - var rl = data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]]
    if (Math.abs(rl)==1)
        | #[+value(data[s[i][0]][s[i][1]+'_rank_local'].top_bottom[s[i][3]][rl<0?"-2":"2"].name)] 
        | (from #[+value((data[s[i][0]][s[i][1]+'_rank_local'].top_bottom[s[i][3]][rl<0?"-2":"2"][2001])/100, {'FORMAT': '0.0%'})] in 2011 
        | to #[+value((data[s[i][0]][s[i][1]+'_rank_local'].top_bottom[s[i][3]][rl<0?"-2":"2"][2011])/100, {'FORMAT': '0.0%'})] in 2021) 
        | saw the next greatest #[+value([rl<0?"drop":"rise"])] in the proportion of #[+value(topic(i).adj_noun)], 
        | while the #[+regional] figure #[+value(rgn.data[s[i][0]][s[i][1]]['change'][s[i][3]]<0?"fell":"went up")] from 
        | #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to
        | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})].
    else if (Math.abs(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]])==2)
        | only 
        | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['2001'])/100, {'FORMAT': '0.0%'})] in 2011 to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['2011'])/100, {'FORMAT': '0.0%'})] in 2021) 
        | saw a greater drop in the proportion of #[+value(topic(i).adj_noun)], while the regional average 
        | #[+value(ud(cha(s, rgn, i), 'increased', 'decreased'))] from 
        | #[+value((rgn.data[s[i][0]][s[i][1]]['2001'][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
        | #[+value((rgn.data[s[i][0]][s[i][1]]['2011'][s[i][3]])/100, {'FORMAT': '0.0%'})].
    else if (Math.abs(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]])==3)
        | only 
        | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['2001'])/100, {'FORMAT': '0.0%'})] in 2011 to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-1"]['2011'])/100, {'FORMAT': '0.0%'})] in 2021) 
        | and 
        | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-2"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-2"]['2001'])/100, {'FORMAT': '0.0%'})] to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank_local']['top_bottom'][s[i][3]]["-2"]['2011'])/100, {'FORMAT': '0.0%'})]) 
        | saw a greater #[+value(cha(s, place, i)<0?"drop":"rise")] in the proportion of #[+value(topic(i).adj_noun)].

//- Across the North East, the proportion of self-employed people rose from 10% in 2011 to 15% in 2021, while the proportion in nearby Middlesborough rose from 11% to 14%.
mixin acrossRegionExcept(i)
    | Across #[+value(parent)], the proportion of #[+value(topic(i).adj_noun)]
    | #[+value(ud(cha(s, rgn, i), 'rose', 'fell'))]
    | from #[+value((rgn.data[s[i][0]][s[i][1]]['2001'][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
    | #[+value((rgn.data[s[i][0]][s[i][1]]['2011'][s[i][3]])/100, {'FORMAT': '0.0%'})] between the last two censuses,
    | while the proportion in #[+nearbyname]
    | #[+value(ud(cha(s, near, i), 'rose', 'fell'))]
    | from #[+value((near.data[s[i][0]][s[i][1]]['2001'][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
    | #[+value((near.data[s[i][0]][s[i][1]]['2011'][s[i][3]])/100, {'FORMAT': '0.0%'})].


mixin acrossCountry(i)
    | Across #[+value(country)], 
    - var r = data[s[i][0]][s[i][1]+'_rank'][s[i][2]][s[i][3]]
    if (Math.abs(r)==1)
        | #[+value(data[s[i][0]][s[i][1]+'_rank'].top_bottom[s[i][3]][rl<0?"-2":"2"].name)] 
        | (from #[+value((data[s[i][0]][s[i][1]+'_rank'].top_bottom[s[i][3]][rl<0?"-2":"2"][2001])/100, {'FORMAT': '0.0%'})] in 2011 
        | to #[+value((data[s[i][0]][s[i][1]+'_rank'].top_bottom[s[i][3]][rl<0?"-2":"2"][2011])/100, {'FORMAT': '0.0%'})] in 2021) 
        | saw the next greatest #[+value([rl<0?"drop":"rise"])] in the proportion of #[+value(topic(i).adj_noun)], 
        | while the #[+regional] figure #[+value(rgn.data[s[i][0]][s[i][1]]['change'][s[i][3]]<0?"fell":"went up")] from 
        | #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to
        | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})].
    else if (Math.abs(data[s[i][0]][s[i][1]+'_rank'][s[i][2]][s[i][3]])==2)
        | only 
        | #[+value(data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['2001'])/100, {'FORMAT': '0.0%'})] in 2011 to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['2011'])/100, {'FORMAT': '0.0%'})] in 2021) 
        | saw a greater drop in the proportion of #[+value(topic(i).adj_noun)], while the regional average 
        | #[+value(ud(cha(s, rgn, i), 'increased', 'decreased'))] from 
        | #[+value((rgn.data[s[i][0]][s[i][1]]['2001'][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
        | #[+value((rgn.data[s[i][0]][s[i][1]]['2011'][s[i][3]])/100, {'FORMAT': '0.0%'})].
    else if (Math.abs(data[s[i][0]][s[i][1]+'_rank'][s[i][2]][s[i][3]])==3)
        | only 
        | #[+value(data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['2001'])/100, {'FORMAT': '0.0%'})] in 2011 to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-1"]['2011'])/100, {'FORMAT': '0.0%'})] in 2021) 
        | and 
        | #[+value(data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-2"]['name'])]
        | (from 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-2"]['2001'])/100, {'FORMAT': '0.0%'})] to 
        | #[+value((data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]]["-2"]['2011'])/100, {'FORMAT': '0.0%'})]) 
        | saw a greater #[+value(cha(s, place, i)<0?"drop":"rise")] in the proportion of #[+value(topic(i).adj_noun)].

mixin despiteRegion(i)
    | Despite the shift in #[+value(topics[s[i][0]].general)], #[+value(place.name)] still has #[+value(parent)]'s 
    | #[+value(udord(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]], 'highest propotion', 'lowest propotion'))]
    | of #[+value(topic(i)['adj_noun'])], 
    | behind
    | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['above_below'][s[i][3]].above.name)]
    | (#[+value(data[s[i][0]][s[i][1]+'_rank_local']['above_below'][s[i][3]].above.value/100, {'FORMAT': '0.0%'})]).

mixin despiteCountry(i)
    | Despite the shift in #[+value(topics[s[i][0]].general)], #[+value(place.name)] still has #[+value(country)]'s 
    | #[+value(udord(data[s[i][0]][s[i][1]+'_rank'][s[i][2]][s[i][3]], 'highest propotion', 'lowest propotion'))]
    | of #[+value(topic(i)['adj_noun'])], 
    | behind 
    | #[+value(data[s[i][0]][s[i][1]+'_rank']['above_below'][s[i][3]].above.name)]
    | (#[+value(data[s[i][0]][s[i][1]+'_rank']['above_below'][s[i][3]].above.value/100, {'FORMAT': '0.0%'})]).

mixin ppoint()
    if !hasSaid('PP')
        | percentage points (pp)
        recordSaid('PP')
    else
        | pp

mixin sent2Diff(i, chain0_01, chain0_11, chain1_01, chain1_11)
    - console.log('chain0_01', chain0_01)
    | #[+value(topic(i, chains[s[i][3]][0]).topic)] in 
    | #[+value(place.name)]
    if (Math.round(chain0_11*10)/10==Math.round(chain0_01*10)/10)
        | remained stable at around #[+value((chain0_11)/100, {'FORMAT': '0.0%'})]
    else
        | #[+value(ud(chain0_11-chain0_01, 'rose', 'fell'))]
        | from 
        | #[+value((chain0_01/100), {'FORMAT': '0.0%'})]
        | to 
        | #[+value((chain0_11/100), {'FORMAT': '0.0%'})]
    if (chains[s[i][3]].length>1)
        | , while #[+value(topic(i, chains[s[i][3]][1]).topic)]
        if (Math.round(chain1_11*10)/10==Math.round(chain1_01*10)/10)
            | remained stable at around #[+value((chain1_11)/100, {'FORMAT': '0.0%'})]
        else
            | #[+value(ud(chain1_11-chain1_01, 'increased', 'decreased'))]
            | from 
            | #[+value((chain1_01/100), {'FORMAT': '0.0%'})]
            | to 
            | #[+value((chain1_11/100), {'FORMAT': '0.0%'})]
    | .

//- The percentage of private renters in this district is rising but at a slower rate than the average across the North West.
mixin difference(i, chain0_01, chain0_11, chain1_01, chain1_11)
    | The percentage of #[+value(topic(i).adj_noun)] 
    if (Math.abs(cha(s, place, i))<1)
        | remained 
        if ((cur(s, place, i)-cur(s, eng, i))<-3)
            | low
        else if ((cur(s, place, i)-cur(s, eng, i))>3)
            | high
        else 
            | stable
    else
        | is #[+value(ud(cha(s, place, i), 'rising', 'falling'))] 
    synz {mode:'sequence'}
        syn
            | in #[+value(place.name)]
        syn
            | here
        syn
            | in this #[+value(place.classification)] 
        syn
            | in this area
    - var curDif
    if ((stories[i].type.includes('nearDiff'))&(!hasSaid('nearDiff'))|(eq(stories[i].type, ['nearDiff'])))
        recordSaid('nearDiff')
        - curDif = 'nearDiff'
        if (Math.abs(cha(s, place, i))<1)
            | , while the proportion #[+value(ud(cha(s, near, i), 'rose', 'fell'))] in
        else
            if (Math.abs(cha(s, place, i)) < Math.abs(cha(s, near, i)))
                | but at a slower rate than in
            else
                | at a faster rate than in
        | #[+nearbyname].
    else if ((stories[i].type.includes('simiDiff'))&(!hasSaid('simiDiff'))|(eq(stories[i].type, ['simiDiff'])))
        recordSaid('simiDiff')
        - curDif = 'simiDiff'
        if (Math.abs(cha(s, place, i))<1)
            | , while the proportion #[+value(ud(cha(s, place.similar, i), 'rose', 'fell'))] in
        else
            if (Math.abs(cha(s, place, i)) < Math.abs(cha(s, place.similar, i)))
                | but at a slower rate than in
            else
                | at a faster rate than in
        | #[+similarname].
    else if (stories[i].type.includes('regDiff')&(!hasSaid('regDiff'))|(eq(stories[i].type, ['regDiff'])))
        recordSaid('regDiff')
        - curDif = 'regDiff'
        if (Math.abs(cha(s, place, i))<1)
            | , while the proportion #[+value(ud(cha(s, rgn, i), 'rose', 'fell'))] in
        else
            if (Math.abs(cha(s, place, i)) < Math.abs(cha(s, rgn, i)))
                | but at a slower rate than
            else
                | at a faster rate than
        | across #[+value(parent)].
    else if (stories[i].type.includes('couDiff')&(!hasSaid('couDiff'))|(eq(stories[i].type, ['couDiff'])))
        recordSaid('couDiff')
        - curDif = 'couDiff'
        if (Math.abs(cha(s, place, i))<1)
            | , while the proportion #[+value(ud(cha(s, eng, i), 'rose', 'fell'))] in
        else
            if (Math.abs(cha(s, place, i)) < Math.abs(cha(s, eng, i)))
                | but at a slower rate than
            else
                | at a faster rate than
        | across #[+value(country)].
    p 
        | In #[+value(place.name)] the proportion 
        if (Math.abs(cha(s, place, i))<0.2)
            | stayed close to #[+value((data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})] between the last two censuses.
        else
            | #[+value(ud(cha(s, place, i), 'increased', 'decreased'))] 
            | from 
            | #[+value((data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
            | in 2011 to 
            | #[+value((data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
            | in 2021. 
        | During the same period, the 
        if (curDif == 'nearDiff')
            | proportion in #[+nearbyname]
            | #[+value(ud(cha(s, near, i), 'increased', 'decreased'))]  from 
            | #[+value((near.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
            | #[+value((near.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})] 
        else if (curDif == 'simiDiff')
            | proportion in #[+similarname]
            | #[+value(ud(cha(s, place.similar, i), 'increased', 'decreased'))]  from 
            | #[+value((place.similar.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
            | #[+value((place.similar.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})] 
        else if (curDif == 'regDiff')
            | regional proportion
            | #[+value(ud(cha(s, rgn, i), 'increased', 'decreased'))]  from 
            | #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
            | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})] 
        else if (curDif == 'couDiff')
            | proportion across #[+value(country)]
            | #[+value(ud(cha(s, eng, i), 'increased', 'decreased'))]  from 
            | #[+value((eng.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
            | #[+value((eng.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})] 
        | .
    | #[+sent2Diff(i, chain0_01, chain0_11, chain1_01, chain1_11)]

mixin similarname
    | #[+value(place.similar.name)]
    if (!hasSaid('SIMILAR'))
        recordSaid('SIMILAR')
        | , a statistically similar local authority

mixin nearbyname
    if (!hasSaid('NEARBY'))
        recordSaid('NEARBY')
        | nearby
    | #[+value(near.name)]

mixin buck(i, curBuck, chain0_01, chain0_11, chain1_01, chain1_11)
    | The percentage of #[+value(topic(i).adj_noun)] 
    | is #[+value(ud(cha(s, place, i), 'rising', 'falling'))] 
    synz {mode:'sequence'}
        syn
            | in #[+value(place.name)]
        syn
            | here
        syn
            | in this #[+value(place.classification)] 
        syn
            | in this area
    | #[+value(ud(cha(s, place, i), 'but falling', 'but rising'))]
    if (stories[i].type.includes('regBuck')&stories[i].type.includes('couBuck'))
        | across #[+value(parent)] and #[+value(country)] at large
    else if (curBuck=='regBuck')
        | across #[+value(parent)]
    else if (curBuck=='couBuck')
        | across #[+value(country)]
    else if (curBuck=="simiBuck")
        | in #[+similarname]
    else if (curBuck=="nearBuck")
        | in #[+nearbyname]
    | .
    p 
        | In #[+value(place.name)] the proportion 
        | #[+value(ud(cha(s, place, i), 'went up', 'came down'))]
        | from 
        | #[+value((data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
        | in 2011 to 
        | #[+value((data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
        | in 2021
        if (curBuck=='couBuck')
            | , while across #[+value(country)] it
            | #[+value(ud(cha(s, place, i), 'fell', 'went up'))]
            | from #[+value((eng.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
            | to #[+value((eng.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
        else if (curBuck=="simiBuck")
            | , while across #[+value(country)] it
            | #[+value(ud(cha(s, place, i), 'fell', 'went up'))]
            | from #[+value((place.similar.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
            | to #[+value((place.similar.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
        else if (curBuck=="nearBuck")
            | , while across #[+value(country)] it
            | #[+value(ud(cha(s, place, i), 'fell', 'went up'))]
            | from #[+value((near.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
            | to #[+value((near.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]
        | .
        | During the same period, the regional proportion #[+value(ud(cha(s, rgn, i), 'rose', 'fell'))] from 
        | #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})] to 
        | #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})].
    | #[+sent2Diff(i, chain0_01, chain0_11, chain1_01, chain1_11)]

mixin allOthers(i, r, updo)
    | Every local authority across #[+value(parent)] saw a #[+value((updo=="d")?"fall":"rise")]
    | in the proportion of #[+value(topic(i).adj_noun)], as the regional average
    | #[+value((updo=="d")?"dropped":"grew")] from #[+value((rgn.data[s[i][0]][s[i][1]][2001][s[i][3]])/100, {'FORMAT': '0.0%'})]
    | to #[+value((rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])/100, {'FORMAT': '0.0%'})]

//- Deals with all percentage based variables
mixin percPara(i, chain0_01, chain0_11, chain1_01, chain1_11)
    - var chain0_11 = data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]]
    - var chain0_01 = data[s[i][0]][s[i][1]][2001][chains[s[i][3]][0]] 
    - var chain1_11 = data[s[i][0]][s[i][1]][2011][chains[s[i][3]][1]] 
    - var chain1_01 = data[s[i][0]][s[i][1]][2001][chains[s[i][3]][1]] 
    if ((stories[i].type.includes('couBuck', 'regBuck'))&(!stories[i].type.includes('natRank')))
        h2 #[+value(topic(i).subhead.buc)]
    else if ((cha(s, place, i)<0)&(data[s[i][0]][s[i][1]][2011][s[i][3]]<data[s[i][0]][s[i][1]][2001][s[i][3]]))
        h2 #[+value(topic(i).subhead.neg)]
    else if ((cha(s, place, i)>0)&(data[s[i][0]][s[i][1]][2011][s[i][3]]>data[s[i][0]][s[i][1]][2001][s[i][3]]))
        h2 #[+value(topic(i).subhead.pos)]
    else 
        h2 #[+value(topic(i).subhead.neu)]
    if (stories[i].type.includes('natRank'))
        | #[+rank1nat(i)]
        p #[+rank2(i)]
        if (data[s[i][0]][s[i][1]+"_rank"].top_bottom[s[i][3]][1].change<0)
            p #[+allOthers(i, "", "d")]
        else if (data[s[i][0]][s[i][1]+"_rank"].top_bottom[s[i][3]]["-1"].change>0)
            p #[+allOthers(i, "", "u")]
        else if ((data[s[i][0]][s[i][1]+'_rank']['overtake'][s[i][3]].length>0)&(Math.abs(cur(s, place, i, 'r'))<10))
            p #[+overtake(i, "")]
        else
            if (Math.sign(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]]) != Math.sign(cha(s, place, i)))
                p #[+acrossRegionExcept(i)]
            else
                p #[+acrossRegion(i)]
                if ((sign(cha(s, place, i)))!=(sign(cur(s, place, i, 'rl'))))
                    p #[+despiteRegion(i)]
    else if ((stories[i].type.includes('regBuck'))|(eq(stories[i].type, ['regBuck'])))
        - var curBuck = 'regBuck'
        | #[+buck(i, curBuck, chain0_01, chain0_11, chain1_01, chain1_11)]
    else if ((stories[i].type.includes('couBuck'))|(eq(stories[i].type, ['couBuck'])))
        - var curBuck = 'couBuck'
        | #[+buck(i, curBuck, chain0_01, chain0_11, chain1_01, chain1_11)]
    else if ((stories[i].type.includes('size'))&(!hasSaid('SIZE'))|(eq(stories[i].type, ['size'])))
        recordSaid('SIZE')
        | #[+sent1Perc(i)]
        p #[+sent2Perc(i, chain0_01, chain0_11, chain1_01, chain1_11)]
        p #[+sent3Perc(i)]
    else if (stories[i].type.includes('locRank'))
        deleteSaid('SIZE')
        | #[+rank1reg(i)]
        p #[+rank2(i)]
        if (data[s[i][0]][s[i][1]+"_rank_local"].top_bottom[s[i][3]][1].change<0)
            p #[+allOthers(i, "_local", "d")]
        if (data[s[i][0]][s[i][1]+"_rank_local"].top_bottom[s[i][3]]["-1"].change>0)
            p #[+allOthers(i, "_local", "u")]
        else if ((data[s[i][0]][s[i][1]+'_rank_local']['overtake'][s[i][3]].length>0)&(Math.abs(cur(s, place, i, 'rl'))<20))
            p #[+overtake(i, "_local")]
        else
            if (Math.sign(data[s[i][0]][s[i][1]+'_rank_local'][s[i][2]][s[i][3]]) != Math.sign(cha(s, place, i)))
                p #[+acrossRegionExcept(i)]
            else
                p #[+acrossRegion(i)]
                if ((sign(cha(s, place, i)))!=(sign(cur(s, place, i, 'rl'))))
                    p #[+despiteRegion(i)]
    else if ((stories[i].type.includes('simiBuck'))&(!hasSaid('BUCK'))|(eq(stories[i].type, ['simiBuck'])))
        recordSaid('BUCK')
        - var curBuck = 'simiBuck'
        | #[+buck(i, curBuck, chain0_01, chain0_11, chain1_01, chain1_11)]
    else if ((stories[i].type.includes('nearBuck'))&(!hasSaid('BUCK'))|(eq(stories[i].type, ['nearBuck'])))
        recordSaid('BUCK')
        - var curBuck = 'nearBuck'
        | #[+buck(i, curBuck, chain0_01, chain0_11, chain1_01, chain1_11)]
    else
        deleteSaid('SIZE')
        | #[+difference(i, chain0_01, chain0_11, chain1_01, chain1_11)]
    if (s[i][0]=='health')
        p #[+healthExplain]

mixin para(i)
    -console.log('S -', i,  stories[i])
    if (s[i][1] == 'value')
        if (s[i][0] == 'agemed')
            h2 #[+subheadAge(i)]
            | #[+sent1Age(i)]
            p #[+sent2Age(i)]
            p #[+sent3Age(i)]
        else
            h2 #[+subheadVal(i)]
            p #[+sent1pop(i)]
            p #[+sent2pop(i)]
            if (s[i][0]=='population')
                p #[+density]
            //- if ((data['density'][s[i][1]+'_rank'].overtake[s[i][3]].length>0)&(Math.abs(cur(s, place, i, "r"))<30))
            //-     p #[+sent4Pop(i)]
    if (s[i][1] == 'perc')
        | #[+percPara(i)]

-console.log("eng", eng)
-console.log("rgn", rgn)
-console.log("place", place)
| #[+para(0)]
h4 This is a placeholder title for a chart that will be placed below
div#visph Data visualisation placeholder
if (s.length>1)
    | #[+para(1)]
    h4 This is a placeholder title for a chart that will be placed below
    div#visph Data visualisation placeholder
if (s.length>2)
    | #[+para(2)]
    h4 This is a placeholder title for a chart that will be placed below
    div#visph Data visualisation placeholder
if (s.length>3)
    | #[+para(3)]
    h4 This is a placeholder title for a chart that will be placed below
    div#visph Data visualisation placeholder
if (s.length>4)
    | #[+para(4)]
    h4 This is a placeholder title for a chart that will be placed below
    div#visph Data visualisation placeholder
if (s.length>5)
    | #[+para(5)]
    h4 This is a placeholder title for a chart that will be placed below
    div#visph Data visualisation placeholder
//- if (s.length>6)
//-     | #[+para(6)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>7)
//-     | #[+para(7)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>8)
//-     | #[+para(8)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>9)
//-     | #[+para(9)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>10)
//-     | #[+para(10)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>11)
//-     | #[+para(11)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
//- if (s.length>12)
//-     | #[+para(12)]
//-     h4 This is a placeholder title for a chart that will be placed below
//-     div#visph Data visualisation placeholder
