{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/d3-dsv/src/dsv.js","../../node_modules/d3-dsv/src/csv.js","../../node_modules/d3-dsv/src/autoType.js","../../src/utils.js","../../src/App.svelte","../../src/strings.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.43.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","import { csvParse, autoType } from 'd3-dsv';\n\nasync function getData(url) {\n  let response = await fetch(url);\n  let string = await response.text();\n\tlet data = await csvParse(string, autoType);\n  return data;\n}\n\nlet array = ['South East', 'South West', 'East', 'West Midlands', 'East Midlands', 'North East', 'North West', 'Yorkshire and The Humber']\nlet regionThe = place => !array.includes(place) ? place : 'The ' + place;\n\nfunction uncap1(string) {\n    if (string.slice(0, 3)==\"The\") {\n        return string.charAt(0).toLowerCase() + string.slice(1);\n    } else { return string }\n}\n\nexport { uncap1, getData, regionThe };","<script>\n\timport { getData, uncap1, regionThe } from \"./utils\";\n    import string from './strings.js';\n\timport topic from './topicLookup.json';\n\n\tlet defaultLoc = 'Manchester';\n\n\tconst types = {\n\t\tew: {name: '', pl: ''},\n\t\twd: {name: 'Ward', pl: 'Wards'},\n\t\tlad: {name: 'District', pl: 'Districts'},\n\t\trgn: {name: 'Region', pl: 'Regions'},\n\t\tctry: {name: 'Country', pl: 'Countries'}\n\t};\n\tvar options, selected, place, quartiles, eng, rgncode, rgn;\n\n\tlet load = false\n    const onRosaeNlgLoad = () => { load = true }\n\n\t// Data load functions\n\tgetData(\"https://raw.githubusercontent.com/theojolliffe/census-data/main/csv/lists/places_2020.csv\").then(res => {\n\t\tres.forEach(d => {\n\t\t\td.typepl = types[d.type].pl;\n\t\t\td.typenm = types[d.type].name;\n\t\t});\n\t\toptions = res.sort((a, b) => a.name.localeCompare(b.name));\n\t\tselected = options.find(d => d.name == defaultLoc);\n\t\tloadArea(selected.code)\n\t});\n\tfunction loadArea(code) {\n\t\tfetch(\"https://raw.githubusercontent.com/theojolliffe/census-data/main/json/place/\" + code + \".json\")\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tjson.children = options.filter(d => d.parent == code);\n\t\t\tjson.siblings = options.filter(d => d.parent == json['parents'][0]['code']);\n\t\t\tquartiles = null;\n\t\t\tplace = json;\n\t\t\trgncode = place.parents[0].code\n\t\t\tconsole.log(\"Place\", place)\n\t\t\tfetch(\"https://raw.githubusercontent.com/theojolliffe/census-data/main/json/place/\" + rgncode + \".json\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tjson.children = options.filter(d => d.parent == code);\n\t\t\t\tjson.siblings = options.filter(d => d.parent == json['parents'][0]['code']);\n\t\t\t\tquartiles = null;\n\t\t\t\trgn = json;\n\t\t\t})\n\t\t})\n\t\tfetch(\"https://raw.githubusercontent.com/theojolliffe/census-data/main/json/place/E92000001.json\")\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tjson.children = options.filter(d => d.parent == code);\n\t\t\tjson.siblings = options.filter(d => d.parent == json['parents'][0]['code']);\n\t\t\tquartiles = null;\n\t\t\teng = json;\n\t\t})\n\t}\n\t\n\n\n\tlet grewSyn = {\n\t\t1: \"ballooned\",\n\t\t2: \"grew\",\n\t\t3: \"remained relatively stable\",\n\t\t4: \"shrunk\",\n\t\t5: \"fell sharply\"\n\t}\n\tlet num_word = {'one': 1, 'quarter of a million': 250000, 'half a million': 500000, 'three quarters of a million': 750000};\n\n\tlet frac_word = {'one in two': 0.5, 'one in three': 0.333, 'one in four': 0.25, 'one in five': 0.2, 'one in six': 0.167, 'one in seven': 0.143, 'one in eight': 0.125, 'one in nine': 0.111, '1 in 10': 0.1,'1 in 11' : 0.09, '1 in 12' : 0.083, '1 in 13' : 0.077, '1 in 14' : 0.071, '1 in 15' : 0.067, '1 in 16' : 0.063, '1 in 17' : 0.059, '1 in 18' : 0.056, '1 in 19' : 0.053 ,'1 in 20': 0.05, '2 in 10': 0.2, '3 in 10': 0.3, '4 in 10': 0.4, '6 in 10': 0.6, '7 in 10': 0.7, '8 in 10': 0.8, '9 in 10': 0.9, 'all': 1.0};\n\n\tfunction get_word(num, dict) {\n\t\tif (dict == \"frac\") {\n\t\t\tdict = frac_word\n\t\t} else if (dict == \"num\") {\n\t\t\tdict = num_word\n\t\t}\n\t\tlet OverUnder;\n\t\tlet lowest = 2000000;\n\t\tlet lowest_label;\n\t\tfor (const label in dict) {\n\t\t\tif (Math.abs(num-dict[label])<lowest) {\n\t\t\t\tlowest = Math.abs(num-dict[label]) \n\t\t\t\tlowest_label = label\n\t\t\t\tif (num-dict[label]==0) {\n\t\t\t\t\tOverUnder = \"about\"; \n\t\t\t\t}\n\t\t\t\telse if (num-dict[label]>0) {\n\t\t\t\t\tOverUnder = \"just over\";\n\t\t\t\t}\n\t\t\t\telse if (num-dict[label]<0) {\n\t\t\t\t\tOverUnder = \"just under\";\n\t\t\t\t} } }\n\t\treturn [OverUnder, lowest_label]\n\t}\n\tfunction figs(x) {\n\t\tlet sigfig = Number.parseFloat(Number.parseFloat(x).toPrecision(2))\n\t\tlet text;\n\t\tif (x-sigfig<-x/100) {\n\t\t\ttext = \"under \"\n\t\t}\t\n\t\tif (x-sigfig<-x/200) {\n\t\t\tif (Math.round(Math.random())==1) {\n\t\t\t\ttext = \"almost \"\n\t\t\t} else {\n\t\t\t\ttext = \"just under \"\n\t\t\t}\n\t\t}\n\t\telse if (x-sigfig>x/100) {\n\t\t\ttext = \"over \"\n\t\t}\n\t\telse if (x-sigfig>x/200) {\n\t\t\ttext = \"just over \"\n\t\t}\n\t\telse {\n\t\t\ttext = \"about \"\n\t\t}\n\t\treturn [text, sigfig];\n\t}\n\tlet chains = {\n\t\t'good': ['bad', 'fair'],\n\t\t'white': ['black', 'asian'],\n\t\t'rented_private': ['rented_social', 'owned']\n\t}\n\n\tfunction results(place) {\n\t\tvar s = place.stories.map(d => d.label.split(\"_\"))\n\t\ts.forEach(e => {\n\t\t\tif (e.length>4) {\n\t\t\t\te[3] = e[3]+\"_\"+e[4]\n\t\t\t\te.pop()\n\t\t\t}\n\t\t});\n\t\tconsole.log('s', s)\n\n\t\tfunction otherEst(i, hiLo, type) {\n\t\t\tif (typeof hiLo===\"number\" & hiLo<0) {\n\t\t\t\thiLo = \"highest\"\n\t\t\t} else if (typeof hiLo===\"number\") {\n\t\t\t\thiLo = \"lowest\"\n\t\t\t}\n\t\t\tconsole.log(\"I\", i)\n\t\t\tconsole.log('typaaae', type)\n\t\t\tconsole.log('typeee', place.data[s[i][0]][s[i][1]+'_rank_local'])\n\t\t\tconsole.log(\"type\", place.data[s[i][0]][s[i][1]+'_rank_local'][type])\n\t\t\tlet optAr = Object.assign({}, place.data[s[i][0]][s[i][1]+'_rank_local'][type]);\n\t\t\tconsole.log('optarrrr', optAr)\n\t\t\tlet l = new Set(chains[s[i][3]])\n\t\t\tfor (let prop of Object.keys(optAr)) {\n\t\t\t\tif (!l.has(prop)) {\n\t\t\t\t\tdelete optAr[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet optArKey\n\t\t\tif (hiLo=='lowest') {\n\t\t\t\tfor (let [k, v] of Object.entries(optAr)) {\n\t\t\t\t\tif (v > 0) {\n\t\t\t\t\t\tdelete optAr[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptArKey = Object.keys(optAr).reduce((a, b) => optAr[a] > optAr[b] ? a : b);\n\t\t\t}\n\t\t\tif (hiLo=='highest') {\n\t\t\t\tfor (let [k, v] of Object.entries(optAr)) {\n\t\t\t\t\tif (v < 0) {\n\t\t\t\t\t\tdelete optAr[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptArKey = Object.keys(optAr).reduce((a, b) => optAr[a] < optAr[b] ? a : b);\n\t\t\t}\n\t\t\tconsole.log(\"optArKey\", optArKey)\n\t\t\treturn optArKey\n\t\t}\n\n\t\tfunction cur(i, type) {\n\t\t\tif (type==\"rl\") {\n\t\t\t\ttype = \"_rank_local\"\n\t\t\t} else if (type==\"r\") {\n\t\t\t\ttype = \"_rank\"\n\t\t\t} else {\n\t\t\t\ttype = \"\"\n\t\t\t}\n\t\t\treturn place.data[s[i][0]][s[i][1]+type][2011][s[i][3]]\n\t\t}\n\t\tfunction cha(i, type) {\n\t\t\tif (type==\"rl\") {\n\t\t\t\ttype = \"_rank_local\"\n\t\t\t} else if (type==\"r\") {\n\t\t\t\ttype = \"_rank\"\n\t\t\t} else {\n\t\t\t\ttype = \"\"\n\t\t\t}\n\t\t\treturn place.data[s[i][0]][s[i][1]+type]['change'][s[i][3]]\n\t\t}\n\n\n\t\tlet locRank = s.map(d => parseInt(place.data[d[0]][d[1]+\"_rank_local\"][d[2]][d[3]]))\n\t\treturn rosaenlg_en_US.render(string, {\n\t\t\tlanguage: 'en_UK',\n\t\t\tplace: place,\n\t\t\tdata: place.data,\n\t\t\teng: eng,\n\t\t\trgn: rgn,\n\t\t\tparent: uncap1(regionThe(place.parents[0].name)),\n\t\t\ts: s,\n\t\t\tpriorities: place.Priorities,\n\t\t\tgrewSyn: grewSyn,\n\t\t\tlocRank: locRank,\n\t\t\ttopic: topic,\n\t\t\tchains: chains,\n\t\t\tcountry: \"England\",\n\t\t\tget_word: get_word,\n\t\t\tfigs: figs,\n\t\t\totherEst: otherEst,\n\t\t\tcur: cur,\n\t\t\tcha: cha\n\t\t})\n\t}\n</script>\n\n<svelte:head>\n\t<script src=\"https://unpkg.com/rosaenlg@3.0.1/dist/rollup/rosaenlg_tiny_en_US_3.0.1_comp.js\" on:load=\"{onRosaeNlgLoad}\"></script>\n</svelte:head>\n\n{#if place}\n\t{#if load}\n\t\t{#if eng}\t\n\t\t\t{#if rgn}\t\n\t\t\t\t<main>\n\t\t\t\t\t<h1>{place.name}: What's changed</h1>\n\t\t\t\t\t{@html results(place)}\n\t\t\t\t</main>\n\t\t\t{/if}\n\t\t{/if}\n\t{/if}\n{/if}\n\n<style>\n\tmain {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t\twidth: 50%\n\t}\n\n\th1 {\n\t\tfont-size: 4em;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>","export default`\n// mixin standfirst1\n//     | #[+value(place.name)]'s \n//     | #[+value(topic[s[0][0]+\"_\"+s[0][3]].subject)]\n//     | #[+value(grewSyn[Math.ceil((5*locRank[0])/336)])]\n//     | in the 10 years following the 2011 Census.\n\n// mixin standfirst2\n//     | Here are some of Amber Valley’s most notable changes.\n\n// Population passes half a million\nmixin subheadVal(i)\n    | #[+value(topic[s[i][0]+\"_\"+s[i][3]].subject)] \n    if (get_word(data[s[i][0]][s[i][1]]['2011'][s[i][3]], \"num\")[0]<1)\n        | nears \n    else\n        | passes\n    | #[+value(get_word(data[s[i][0]][s[i][1]]['2011'][s[i][3]], \"num\")[1])]\n\n\nmixin tenYears\n  synz {mode:'sequence'}\n    syn\n      | Between the last two censuses\n    syn\n      | In the decade to 2021\n    syn\n      | In the 10 years leading up to 2021\n    syn\n      | In the decade leading up to the last census\n    syn\n      | In the 10 years leading up to the last census\n\n\n// In the decade to 2021, the population of Manchester rose by over 28% from 391,221 to 503,127, giving it the greatest headcount of any local authority area in the North West of England.\nmixin sent1Val(i)\n    | #[+tenYears], \n    | the #[+value(topic[s[i][0]+\"_\"+s[i][3]].subject)] \n    | of #[+value(place.name)] \n    | rose \n    | #[+value(figs(place.stories[i].value)[0])]\n    | #[+value((figs(place.stories[i].value)[1])/100, {'FORMAT': '0[.]0%'})] \n    | from #[+value(figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[0])]\n    | #[+value(figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[1])]\n    | to #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]])[0])]\n    | #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]])[1])],\n    | giving it the \n    if (data[s[i][0]][s[i][1]+'_rank_local'][2011][s[i][3]]>1)\n        | #[+value(data[s[i][0]][s[i][1]+'_rank_local'][2011][s[i][3]], {'ORDINAL_TEXTUAL':true})]\n    | greatest \n    | #[+value(topic[s[i][0]+\"_\"+s[i][3]].synonym)] \n    | of any local authority area in #[+value(parent)].\n\n// The addition of over 100,000 people means Manchester's population is also the fastest-growing in the North West and the second-fastest-growing across England. Only Tower Hamlets in London, with an increase of almost 30%, has a faster-growing population.\nmixin sent2Val(i)\n    | The \n    if (data[s[i][0]][s[i][1]][2011][s[i][3]]-data[s[i][0]][s[i][1]][2001][s[i][3]]<0)\n        | loss\n    else\n        | addition\n    | of \n    | #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]]-data[s[i][0]][s[i][1]][2001][s[i][3]], \"num\")[0])] \n    | #[+value(figs(data[s[i][0]][s[i][1]][2011][s[i][3]]-data[s[i][0]][s[i][1]][2001][s[i][3]], \"num\")[1])]\n    | people \n    | means\n    | #[+value(place.name)]'s \n    | population \n    | is also the\n    if (Math.abs(data[s[i][0]][s[i][1]+'_rank_local']['change'][s[i][3]])>1)\n        | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['change'][s[i][3]], {'ORDINAL_TEXTUAL':true})]\n    | fastest-growing \n    | in the #[+value(parent)] \n    | and the \n    if (Math.abs(data[s[i][0]][s[i][1]+'_rank']['change'][s[i][3]])>1)\n        | #[+value(data[s[i][0]][s[i][1]+'_rank']['change'][s[i][3]], {'ORDINAL_TEXTUAL':true})]\n    | fastest-growing \n    | across \n    | #[+value(country)]. \n    | Only \n    | #[+value(Object.keys(data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]][1]))] \n    | in London \n    | , with an increase of almost \n    | #[+value((figs(Object.values(data[s[i][0]][s[i][1]+'_rank']['top_bottom'][s[i][3]][1]))[1])/100, {'FORMAT': '0[.]0%'})]\n    | , has a \n    | faster-growing \n    | population.\n\n// For each football pitch-sized piece of land (about 7,140 square metres), Manchester is now home to, on average, about 31 people, compared to 24 in 2011.\nmixin density\n    | For each football pitch sized piece of land (about #[+value(7140)] square metres), #[+value(place.name)] is now home to, on average, about \n    | #[+value(figs(0.714*data.density.value[2011].all)[1])] \n    | people, compared to \n    | #[+value(figs(0.714*data.density.value[2001].all)[1])] in 2011.\n\n// Between 2011 and 2021, Manchester overtook Wiltshire and Liverpool to become England's eighth-most populated local authority.\nmixin sent4Val(i)\n    | Between 2011 and 2021, #[+value(place.name)] \n    | overtook \n    | #[+value(data[s[i][0]][s[i][1]+'_rank'].overtake[s[i][3]][0])] \n    | and \n    | #[+value(data[s[i][0]][s[i][1]+'_rank'].overtake[s[i][3]][1])] \n    | to become #[+value(country)]'s\n    | #[+value(data.population.value_rank[2011].all, {'ORDINAL_TEXTUAL':true})]\n    | most \n    | populated \n    | local authority.\n\n// Increasing ethnic diversity\nmixin subheadIncreasing(i)\n    | Increasing ethnic diversity\n\n// Health improves\nmixin subheadMore(i)\n    | More private renters\n\n// Health improves\nmixin subheadPerc(i)\n    | Health improves\n\nmixin percOfRes(place)\n    synz {mode:'sequence'}\n        syn\n            | the percentage of #[+value(place.name)] residents\n        syn\n            | the percentage of people living in #[+value(place.name)] \n\n// In the 10 years leading up to the last census, the percentage of Manchester residents describing their health as good increased from just over 66% to about 80%.\nmixin sent1Perc(i)\n    if (i==1)\n        | Census 2021 data also shows a shift in the local population's well-being.\n    else\n        | #[+tenYears], \n    | #[+percOfRes(place)]\n    | #[+value(topic[s[i][0]+\"_\"+s[i][3]].clausal_modifier)] \n    if (cha(i)<0)\n        | decreased\n    else\n        | increased \n    | from \n    | #[+value(figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[0])]\n    | #[+value((figs(data[s[i][0]][s[i][1]][2001][s[i][3]])[1])/100, {'FORMAT': '0[.]0%'})]\n    | to \n    | #[+value(figs(cur(i))[0])]\n    | #[+value((figs(cur(i))[1])/100, {'FORMAT': '0[.]0%'})]\n    | .\n\n// About one in eight (13%) described their health as fair, compared with just over 23% in 2011. The percentage reporting bad health decreased from just under 13% to just over 7%.\nmixin sent2Perc(i)\n    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])/100, 'frac')[0])]\n    | #[+value(get_word((data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])/100, 'frac')[1])]\n    | (#[+value((figs(data[s[i][0]][s[i][1]][2011][chains[s[i][3]][0]])[1])/100, {'FORMAT': '0[.]0%'})])  \n    | #[+value(topic[s[i][0]+\"_\"+chains[s[i][3]][0]].verb_past)]\n    | in 2021, \n    | compared with \n    | #[+value(figs(data[s[i][0]][s[i][1]][2001][chains[s[i][3]][0]])[0])]\n    | #[+value((figs(data[s[i][0]][s[i][1]][2001][chains[s[i][3]][0]])[1])/100, {'FORMAT': '0[.]0%'})]\n    | in 2011. \n    | The percentage \n    | #[+value(topic[s[i][0]+\"_\"+chains[s[i][3]][1]].clausal_modifier)] \n    if (data[s[i][0]][s[i][1]][2001][chains[s[i][3]][1]]>data[s[i][0]][s[i][1]][2011][chains[s[i][3]][1]])\n        | decreased \n    else\n        | increased\n    | from \n    | #[+value(figs(data[s[i][0]][s[i][1]][2001][chains[s[i][3]][1]])[0])]\n    | #[+value((figs(data[s[i][0]][s[i][1]][2001][chains[s[i][3]][1]])[1])/100, {'FORMAT': '0[.]0%'})]\n    | to \n    | #[+value(figs(data[s[i][0]][s[i][1]][2011][chains[s[i][3]][1]])[0])]\n    | #[+value((figs(data[s[i][0]][s[i][1]][2011][chains[s[i][3]][1]])[1])/100, {'FORMAT': '0[.]0%'})]\n    | .\n\nmixin inRegion\n    synz {mode:'sequence'}\n        syn \n            | in any other local authority district across\n        syn\n            | anywhere else in\n\n// The percentage of healthy residents is increasing faster here than in any other local authority district across England.\nmixin sent3Perc(i)\n    | The percentage of \n    | #[+value(topic[s[i][0]+\"_\"+s[i][3]].adj_noun)] \n    | is \n    if (Math.abs(cha(i, \"rl\"))==1)\n        if (cha(i, \"rl\")<0)\n            | decreasing\n        else\n            | increasing \n        | faster here than #[+inRegion]\n        if (cha(i, \"r\")==1) \n            | #[+value(country)]\n            | .\n            if (Math.abs(cur(i, \"r\"))<11)\n                | #[+nowHasCou(i)]\n            else\n                | #[+considImprov(i)]\n        else\n            | #[+value(parent)]\n            if ((Math.abs(data[s[i][0]][s[i][1]+'_rank_local']['change'][otherEst(i, cha(i, \"rl\"), 'change')])==1)&(!hasSaid('OtherChange')))\n                | , while the percentage of \n                | #[+value(topic[s[i][0]+\"_\"+otherEst(i, cha(i, \"rl\"), 'change')].adj_noun)] is\n                if (data[s[i][0]][s[i][1]+'_rank_local']['change'][otherEst(i, cha(i, \"rl\"), 'change')]<0)\n                    | falling\n                else \n                    | growing \n                | faster than anywhere in the region.\n                p #[+nowHasReg(i)] \n                recordSaid('OtherChange')\n            else\n                | .\n                if (Math.abs(cur(i, \"rl\"))<6)\n                    | As a result, #[+nowHasReg(i)]\n                    p #[+nextHighest]\n                else\n                    | #[+considImprov(i)]\n\nmixin nextHighest\n    | The North West’s next highest proportion of private renters can be found in Blackpool (26.1%), while 18.8% in nearby Salford rent privately.\n\n// As a result, this area now has the country's highest proportion of private renters and the lowest proportion of homeowners.\nmixin nowHasCou(i)\n    | As a result, this area now has the country's \n    if (Math.abs(data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]])!=1)\n        | #[+value(data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]], {'ORDINAL_TEXTUAL':true})]\n    if (data[s[i][0]][s[i][1]+'_rank']['2011'][s[i][3]]<0)\n        | lowest\n    else\n        | highest \n    | proportion of \n    | #[+value(topic[s[i][0]+\"_\"+s[i][3]].adj_noun)]\n    | and the lowest proportion of homeowners\n    | .\n\n// As a result, this area now has the region’s highest proportion of private renters and the lowest proportion of homeowners.\nmixin nowHasReg(i)\n    | this area now has the region’s \n    if (Math.abs(data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]])!=1)\n        | #[+value(data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]], {'ORDINAL_TEXTUAL':true})]\n    if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][s[i][3]]<0)\n        | lowest proportion of #[+value(topic[s[i][0]+\"_\"+s[i][3]].adj_noun)]\n        if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][otherEst(i, 'highest', '2011')]==1)\n            | and the \n            | highest proportion of \n            | #[+value(topic[s[i][0]+\"_\"+otherEst(i, 'highest', '2011')].adj_noun)]\n    else\n        | highest proportion of #[+value(topic[s[i][0]+\"_\"+s[i][3]].adj_noun)]\n        if (data[s[i][0]][s[i][1]+'_rank_local']['2011'][otherEst(i, 'lowest', '2011')]==-1)\n            | and the \n            | lowest proportion of\n            | #[+value(topic[s[i][0]+\"_\"+otherEst(i, 'lowest', '2011')].adj_noun)]\n    | .\n\n// The considerable improvement has brought health in Manchester close to the national average (about 81% in England described their health as good in 2021).\nmixin considImprov(i)\n    if (data[s[i][0]][s[i][1]+'_rank_local']['change'][s[i][3]]==1)\n        if (data[s[i][0]][s[i][1]][2011][s[i][3]]<(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]-2))\n            | But despite the considerable improvement, \n            | #[+value(place.name)] \n            | remains \n            | less healthy than \n        else if (data[s[i][0]][s[i][1]][2011][s[i][3]]>(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]+2))\n            | As a result, #[+value(place.name)] \n            | has become more healthy than\n        else\n            | The considerable improvement has brought health in \n            | #[+value(place.name)] close to \n        | the national average\n        | (#[+value(figs(eng.data[s[i][0]][s[i][1]][2011][s[i][3]])[0])]\n        | #[+value((figs(eng.data[s[i][0]][s[i][1]][2011][s[i][3]])[1])/100, {'FORMAT': '0[.]0%'})]\n        | in #[+value(country)] described their health as good in 2021).\n    else\n        if (data[s[i][0]][s[i][1]][2011][s[i][3]]<(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]-2))\n            | But despite the considerable improvement, \n            | #[+value(place.name)] \n            | remains \n            | less healthy than \n        else if (data[s[i][0]][s[i][1]][2011][s[i][3]]>(eng.data[s[i][0]][s[i][1]][2011][s[i][3]]+2))\n            | As a result, #[+value(place.name)] \n            | has become more healthy than   \n        else\n            | The considerable improvement has brought health in \n            | #[+value(place.name)] close to \n        | the regional average\n        | (#[+value(figs(rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])[0])]\n        | #[+value((figs(rgn.data[s[i][0]][s[i][1]][2011][s[i][3]])[1])/100, {'FORMAT': '0[.]0%'})]\n        | in #[+value(parent)] described their health as good in 2021).\n\nmixin healthExplain\n    | These data are people’s own opinions in describing their overall health. They may be inconsistent with other measures of health, such as NHS records.\n\nmixin para(i)\n    if (s[i][1] == 'value')\n        h2 #[+subheadVal(i)]\n        if (i==1)\n            p #[+startPara2] \n        p #[+sent1Val(i)]\n        p #[+sent2Val(i)]\n        if (s[i][0]=='population')\n            p #[+density]\n        p #[+sent4Val(i)]\n\n    if (s[i][1] == 'perc')\n        if (s[i][0] == 'ethnicity')\n            h2 #[+subheadIncreasing(i)]\n        else if (s[i][0] == 'tenure')\n            h2 #[+subheadMore(i)]\n        else\n            h2 #[+subheadPerc(i)]\n        p #[+sent1Perc(i)]\n        p #[+sent2Perc(i)]\n        p #[+sent3Perc(i)]\n        if (s[i][0]=='health')\n            p #[+healthExplain]\n\n\n// p\n//     | #[+standfirst1]\n// p\n//     | #[+standfirst2]\np Standfirst placeholder\n| #[+para(0)]\n| #[+para(1)]\n| #[+para(2)]\n| #[+para(3)]\n`","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","i","innerHTML","Array","from","childNodes","length","p","d","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","block","delete","local","customElement","new_on_destroy","map","filter","mount_component","EOL","EOF","objectConverter","columns","Function","JSON","stringify","join","inferColumns","rows","columnSet","row","column","pad","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","csv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","f","N","I","eof","eol","token","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","dsv","csvParse","autoType","key","number","trim","NaN","match","fixtz","getHours","array","regionThe","place","includes","uncap1","string","charAt","toLowerCase","wholeText","element_src","url","href","event","handler","addEventListener","removeEventListener","figs","x","sigfig","Number","parseFloat","toPrecision","Math","round","random","types","ew","pl","wd","lad","rgn","ctry","selected","eng","rgncode","load","async","response","fetch","getData","res","code","typepl","type","typenm","sort","localeCompare","find","json","parent","siblings","parents","console","log","grewSyn","num_word","one","frac_word","all","get_word","num","dict","OverUnder","lowest_label","lowest","label","abs","chains","good","white","rented_private","stories","split","locRank","parseInt","rosaenlg_en_US","render","language","priorities","Priorities","topic","country","otherEst","hiLo","optAr","assign","optArKey","prop","keys","k","v","entries","reduce","cur","cha","$destroy","detaching","destroy_component","$on","index","indexOf","splice","$set","$$props","obj","$$set","body"],"mappings":"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"}